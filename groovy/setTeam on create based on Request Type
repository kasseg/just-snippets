import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.event.type.EventDispatchOption
import com.atlassian.servicedesk.api.requesttype.RequestTypeService
import com.onresolve.scriptrunner.runner.customisers.WithPlugin
@WithPlugin("com.atlassian.servicedesk")
def currentUser = ComponentAccessor.getJiraAuthenticationContext().getLoggedInUser() //Получаем текущего пользователя (создателя)
def requestTypeService = ComponentAccessor.getOSGiComponentInstanceOfType(RequestTypeService)
def reqQ = requestTypeService.newQueryBuilder().issue(issue.id).build()
def reqT = requestTypeService.getRequestTypes(currentUser, reqQ)
def requestType = reqT.right.results[0].getName() //Получаем название услуги
String assignTeam="RSS" //Команда по умолчанию
if (requestType == "Качество распознавания"){
    assignTeam="Trax Recognize"
}
def customFieldManager = ComponentAccessor.getCustomFieldManager()
def cfTeam = customFieldManager.getCustomFieldObjects(issue).find {it.name == 'Team'} 
def fieldConfig = cfTeam.getRelevantConfig(issue)
def value = ComponentAccessor.optionsManager.getOptions(fieldConfig)?.find { it.toString() == assignTeam }
issue.setCustomFieldValue(cfTeam, value); // Устанавливаем значение поля Team в соответствии с ответственной команды
ComponentAccessor.getIssueManager().updateIssue(currentUser, issue, EventDispatchOption.DO_NOT_DISPATCH, false)  //Сохраняем изменения

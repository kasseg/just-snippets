import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.bc.issue.IssueService
import com.atlassian.jira.issue.IssueInputParameters
import com.atlassian.jira.event.type.EventDispatchOption
import com.atlassian.jira.issue.MutableIssue
import com.atlassian.jira.issue.Issue
import com.atlassian.jira.issue.CustomFieldManager
import com.atlassian.jira.issue.customfields.manager.OptionsManager
import com.atlassian.jira.issue.AttachmentManager
import java.sql.Timestamp
import com.atlassian.jira.issue.comments.CommentManager
import org.apache.log4j.Logger
import org.apache.log4j.Level
def log = Logger.getLogger("com.acme.CreateSubtask")
log.setLevel(Level.DEBUG)
def currentUser = ComponentAccessor.getJiraAuthenticationContext().getLoggedInUser()
def issue = ComponentAccessor.getIssueManager().getIssueByCurrentKey("SUP-91") 
def customFieldManager = ComponentAccessor.getCustomFieldManager()
def cfProblemType = customFieldManager.getCustomFieldObject(10400)//Тип проблемы
def cfSWType = customFieldManager.getCustomFieldObject(10414)//Тип ПО
def cfSWVersion = customFieldManager.getCustomFieldObject(10426)//Версия ПО
def cfDevDescription = customFieldManager.getCustomFieldObject(10425)//Описание для разработчиков
def constantManager = ComponentAccessor.getConstantsManager()
def issueFactory = ComponentAccessor.getIssueFactory()
def subTaskManager = ComponentAccessor.getSubTaskManager()
def issueManager = ComponentAccessor.getIssueManager()
IssueService issueService = ComponentAccessor.getIssueService()
IssueInputParameters issueInputParameters = issueService.newIssueInputParameters();
AttachmentManager attachmentManager = ComponentAccessor.getAttachmentManager();
MutableIssue newTask = issueFactory.getIssue()
newTask.setSummary(issue.summary)
newTask.setDescription(issue.getCustomFieldValue(cfDevDescription))
newTask.setReporter(issue.getAssignee())
newTask.setCustomFieldValue(cfSWType, issue.getCustomFieldValue(cfSWType))
newTask.setCustomFieldValue(cfProblemType, issue.getCustomFieldValue(cfProblemType))
newTask.setCustomFieldValue(cfSWVersion, issue.getCustomFieldValue(cfSWVersion))
newTask.setProjectObject(ComponentAccessor.getProjectManager().getProjectObjByKey(issue.getCustomFieldValue(cfSWType) as String))
newTask.setIssueTypeId(constantManager.getAllIssueTypeObjects().find{it.getName() == "Проблема"}.id)
def newIssueParams = ["issue" : newTask] as Map<String,Object>
issueManager.createIssueObject(currentUser, newIssueParams)
attachmentManager.copyAttachments(issue, currentUser, newTask.key);
def issueLinkManager = ComponentAccessor.issueLinkManager
issueLinkManager.createIssueLink(issue.getId(), newTask.getId(), 10003, 1, currentUser);
